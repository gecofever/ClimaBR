version: 0.2

env:
  variables:
    DBT_DATABASE: awsdatacatalog
    DBT_SCHEMA: landing #Colocar seu database Glue
    S3_STAGING_DIR: s3://projeto-dados-clima-dbt/dbt/table #Colocar o nome do seu bucket
    S3_DATA_DIR: s3://projeto-dados-clima-dbt/dbt/metadados #Colocar o nome do seu bucket
    S3_DOCS_DIR: s3://www.climabrstates.com #Colocar o nome do seu bucket
    AWS_REGION: us-east-1 #Colocar sua região

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - pip install --upgrade pip
      - pip install dbt-athena-community

  pre_build:
    commands:
      - mkdir -p ~/.dbt
      - echo "Gerando profiles.yml para produção"
      - |
        cat > ~/.dbt/profiles.yml <<EOF
        climabr:
          target: prod
          outputs:
            prod:
              type: athena
              database: ${DBT_DATABASE}
              region_name: ${AWS_REGION}
              schema: ${DBT_SCHEMA}
              s3_staging_dir: ${S3_STAGING_DIR}
              s3_data_dir: ${S3_DATA_DIR}
              threads: 4
        EOF

  build:
    commands:
      - dbt deps
      - dbt debug
      - dbt run
      - dbt test
      - dbt docs generate
      - echo "Adicionando data de atualização no HTML..."
      - |
        BUILD_DATE=$(TZ=America/Sao_Paulo date +"%d/%m/%Y às %H:%M")
        sed -i "/<\/body>/i <p style='text-align:center;font-size:14px;'> Última atualização em: ${BUILD_DATE}</p>" target/index.html

  post_build:
    commands:
      - echo "Copiando para ${S3_DOCS_DIR}..."
      - aws s3 sync target/ ${S3_DOCS_DIR} --delete

artifacts:
  files:
    - target/**/*